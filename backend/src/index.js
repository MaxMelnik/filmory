import dotenv from 'dotenv';
import mongoose from 'mongoose';
import express from 'express';
import bot from './bot/index.js';

dotenv.config();

const { MONGODB_CONNECT } = process.env;
if (!MONGODB_CONNECT) {
    console.error('‚ùå MONGO_URI –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —É .env');
    process.exit(1);
}

const app = express();
const PORT = process.env.PORT || 3000;

// Health-check endpoint
app.get('/', (req, res) => res.send('üü¢ Filmory bot is alive'));

// === 1. –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä —Å–ø–æ—á–∞—Ç–∫—É ===
app.listen(PORT, async () => {
    console.log(`üåê Web server is running on port ${PORT}`);

    // === 2. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—å –¥–æ Mongo ===
    try {
        await mongoose.connect(MONGODB_CONNECT);
        console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');
    } catch (err) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è MongoDB:', err);
        process.exit(1);
    }

    // === 3. –¢–µ–ø–µ—Ä –∑–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ ===
    try {
        await bot.telegram.getMe().then(info => {
            console.log(`ü§ñ Filmory –∑–∞–ø—É—â–µ–Ω–∏–π —è–∫ @${info.username}`);
        });
        bot.launch();
    } catch (err) {
        console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–æ—Ç–∞:', err);
    }


});

// === 4. Graceful shutdown ===
process.once('SIGINT', async () => {
    console.log('üõë –ó—É–ø–∏–Ω—è—é Filmory...');
    await bot.stop('SIGINT');
    await mongoose.connection.close();
    process.exit(0);
});

process.once('SIGTERM', async () => {
    console.log('üõë –ó—É–ø–∏–Ω—è—é Filmory...');
    await bot.stop('SIGTERM');
    await mongoose.connection.close();
    process.exit(0);
});
